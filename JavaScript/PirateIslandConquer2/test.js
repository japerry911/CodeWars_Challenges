const conquerIsland = require("./index");

test("conquerIsland is a function", () => {
  expect(typeof conquerIsland).toEqual("function");
});

test("conquerIsland works correctly - map 1", () => {
  expect(
    conquerIsland([
      ["~", "~", "~", "u", "~", "p", "~", "p"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
    ])
  ).toEqual([[0, 3]]);
});

test("conquerIsland works correctly - map 2", () => {
  expect(
    conquerIsland([
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["u", "~", "~", "~", "~", "~", "p", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["p", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["u", "~", "~", "~", "~", "~", "~", "~"],
    ])
  ).toEqual([[7, 0]]);
});

test("conquerIsland works correctly - map 3", () => {
  expect(
    conquerIsland([
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "p", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "p", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
    ])
  ).toEqual([]);
});

test("conquerIsland works correctly - map 4", () => {
  expect(
    conquerIsland([
      ["~", "~", "u", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "p", "~", "~", "~", "~"],
      ["u", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "p", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "u"],
    ])
  ).toEqual([
    [0, 2],
    [7, 7],
  ]);
});

test("conquerIsland works correctly - map 5", () => {
  expect(
    conquerIsland([
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "p", "~", "~", "~"],
      ["~", "~", "m", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "u", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "p"],
    ])
  ).toEqual([[4, 4]]);
});

test("conquerIsland works correctly - map 6", () => {
  expect(
    conquerIsland([
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "p", "m", "~", "~", "~", "~"],
      ["m", "~", "m", "p", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "m", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "m", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
    ])
  ).toEqual([
    [1, 3],
    [2, 2],
  ]);
});

test("conquerIsland works correctly - map 7", () => {
  expect(
    conquerIsland([
      ["~", "m", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "m", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["~", "~", "~", "~", "~", "~", "~", "~"],
      ["p", "~", "~", "~", "~", "u", "~", "~"],
      ["~", "~", "u", "p", "~", "~", "~", "~"],
      ["~", "~", "m", "~", "~", "~", "~", "~"],
    ])
  ).toEqual([[6, 2]]);
});
